
; == 01_camera.ks ==========================================

; カメラ演出の解説を行います。

; ==========================================================
	
	
	
	; [set_default_view]
	; これは独自マクロです(→macro.ks)。
	; 解説画面を作成します。
	[set_default_view]
	
	
	
;-----------------------------------------------------------
*Part1
;-----------------------------------------------------------
	
	#akane:default
		ティラノスクリプトには、強力な[<y]カメラ演出機能[>]があるよ。[p]
	#akane:happy
		これを使えば、一枚の絵を魅力的に演出したり、空間の広さを印象的に演出したりできるんだー![p]
		たとえば……
	
	; [camera]
	; 画像を描画する前に、レイヤー２のカメラを動かしておきます。
	; 画面の右下のほうを２倍ズームする形ですね。
	; この時点ではレイヤー２には何も描画されていないので、
	; カメラを動かしたことはプレイヤーにわかりません。
	[camera layer="2" time="1" zoom="2" y="-160" x="240"]
	
	; [image]
	; カメラを動かしておいてから、
	; 時間をかけてノベコレ画像をフェードインします。
	[image  layer="2" time="1000" storage="nobekore_x2.jpg" width="960" height="640" left="0" top="0"]
	
		こんな一枚絵があるとするよね。[p]
		え？　何が写ってるのかって？[p]
		まあまあ、そうあわてなさんなって。[p]
		これはねー……。[p]
	
	; [camera]
	; ばーんとカメラを引きます。
	; zoom属性は2→1.3、y属性は-160→0、x属性は240→-65となりました。
	; ease_type属性に着目してください。
	; ここで、カメラが移動するときの「イージング（移動のし具合を制御する仕組み。
	; 直線的に動く、ふわんと動く、など）」を指定しています。
	; ease_type属性にはlinear, easeなどのキーワードを指定することができますが、
	; cubic-bezier( ... ) という記述で自分好みのイージングを指定することもできます。
	; cubic-bezier関数は次のサイトで簡単に生成できますので、紹介しておきます。
	; http://cubic-bezier.com/#.17,.67,.83,.67
	[camera layer="2" wait="false" zoom="1.3" y="0" x="-65" ease_type="cubic-bezier(0.175, 0.885, 0.32, 1.275)"]
	
		ばーん!!!!![p]
		写っているのは私でしたっ!![p]
	
	; [wait_camera]
	; カメラ移動の完了を待つことができるタグです。
	; すでに完了している場合は、即時に次のタグを読みます。
	[wait_camera]
	
	; [camera]
	; あかねの顔をズーム。
	; カメラをやや回転させて、あかねの顔が垂直に写るようにしています。
	[camera layer="2" wait="false" zoom="1.7" y="20" x="-150" rotate="15"]
	
		ふふ、よく撮れてるでしょー？[p]
		胸のあたりになにか持ってるね。[p]
	
	; [wait_camera][camera]
	; 上と同様に、カメラの完了を待ってから、今度は胸をズームアップします。
	[wait_camera]
	[camera layer="2" wait="false" zoom="4" y="-190" x="-150" rotate="-10"]
	
		これは……[wait_camera][wait time="100"]ノベルゲームのパッケージだっ！[p]
	
	; [reset_camera]
	; カメラを元の位置に戻します。
	[reset_camera layer="2" wait="false"]
	
		そして……。[p]
	
	; [wait_camera][camera]
	; カメラ移動の完了を待ってから「ノベルゲームコレクション」の部分に注目します。
	[wait_camera]
	[camera layer="2" wait="false" zoom="2" y="60" x="240" rotate="0"]
	
		ノベルゲームコレクション！[p]
		ティラノスクリプトで作ったゲームを投稿できる場所だね！[p]
	
	; [reset_camera]
	; カメラを戻すと同時に、レイヤー２を解放します。
	[reset_camera layer="2" wait="false"]
	[freeimage layer="2" time="1000"]
	
	#akane:default
		……と、これがカメラ演出です。[p]
		こんな感じで、とっても滑らかにカメラを動かすことができるよ。[p]
	#akane:happy
		こうやってちょっと絵を動かしてあげると、一枚の絵でもぐっと魅力的になるね！[p]
	#akane:doki
		動かしすぎると、くどいかもだけど。[p]
	
	
	
;-----------------------------------------------------------
*Part2
;-----------------------------------------------------------
	
	#akane:default
		一枚絵の演出以外にも、解像度の大きな背景画像とカメラ演出を組み合わせれば、[p]
	
	; [layopt]
	; メッセージウィンドウを消します。
	[layopt visible="false" layer="message0"]
	
	; [mask]～[mask_off]
	; 画面をマスクで覆っているうちに画面を構築して、構築し終わったら外します。
	[mask color="white"]
		
		; [camera]
		; カメラを上に600px動かしておきます。
		[camera y="600" time="0"]
		
		; [image]
		; 画面サイズ(960x640)の倍の大きさ(1920x1280)の海の背景画像をレイヤー１に出します。
		; (背景レイヤーには出せません。なぜかというと、ティラノスクリプトの仕様上、
		; 背景レイヤーに出した画像は自動的に画面サイズにフィットするようにリサイズされるからです。
		; したがって、画面サイズより大きい画像を扱う場合、レイヤー０以上で扱います。)
		[image storage="../bgimage/umi_big.jpg" x="-660" y="-600" width="1920" height="1280" layer="0"]
		[wait time="300"]
	[mask_off]
	
	; [reset_camera]
	; カメラを元の位置に戻す。
	; これでもともと上にあったカメラ（空を映していたカメラ）が下がって、
	; あかねが映るようになります。
	[reset_camera time="2000" ease_type="ease-out"]
	
	; [layopt]
	; メッセージウィンドウを表示します。
	[layopt visible="true" layer="message0"]
	
		どうかな？　広々とした感じが出るでしょー。[p]
	
	
	
;-----------------------------------------------------------
*Part3
;-----------------------------------------------------------
	
	#akane:default
		ちなみにカメラは、[<y]レイヤーごとに別々に動かす[>]こともできるから、[p]
	
	
	; [layopt]
	; メッセージウィンドウを消します。
	[layopt visible="false" layer="message0"]
	
	
	; == ここからカメラを別々に動かしていく ==
			
			; ★IE, Edge用。カメラの準備運動をしてやらないと一部挙動がおかしくなる、、、。
			[camera layer="1" x="0" time="0"]
			[camera layer="0" x="0" time="0"]
	
	; [camera]×２
	[camera x="-90" y="0" layer="1" wait="false"]
	[camera x="-45" y="0" layer="0"]
	; レイヤー１（あかねがいる）と、
	; レイヤー０（海がある）を、別々に動かしていきます。
	; このとき、先に使うほうの[camera]タグにwait="false"属性をつけておくことで、
	; 後に使うほうの[camera]タグと同時に動かすことができます。
	; 
	; 疑似３Ｄ的なカメラ移動を行う際には、
	;
	;     ●近くのもの＝ダイナミックに動く
	;     ●遠くのもの＝さほど動かない
	;
	; ということを念頭に置きます。
	;
	;                               |
	;                               |
	;     .＿＿|＿＿＿＿＿＿＿＿＿＿|
	;    カ   前                   後
	;    メ                          
	;    ラ   景                   景
	;
	; ↑こんなイメージ。
	; 
	; 前景と後景の移動量の比については、
	; 実際には距離を用いた計算式で書けるのでしょうが、
	; 面倒なのでここでは大雑把に、
	;「レイヤー０のカメラ移動量はレイヤー１のカメラ移動量の２分の１」
	; としています。
	; たとえば、レイヤー１のxが0→90と動くとき、レイヤーのxは0→45と動く。
	; レイヤー１のzoomが1→0.70と動く（-0.30）とき、
	; レイヤー０のzoomは1→0.85と動く（-0.15）。
	; ……というようにです。
	
	; 以下、コメントを省略。
	
	[camera x="120" y="0" layer="1" wait="false"]
	[camera x=" 60" y="0" layer="0"]
	
	[camera x="-180" y="90" zoom="0.70" layer="1" wait="false"]
	[camera x="- 90" y="60" zoom="0.85" layer="0"]
	
	[camera x="150" y="-150" zoom="2.00  " layer="1" wait="false"]
	[camera x=" 75" y="- 75" zoom="1.50" layer="0"]
	
	[reset_camera layer="1" wait="false"]
	[reset_camera layer="0"]
	
	[layopt visible="true" layer="message0"]
	
		こんなふうに、[<y]疑似３Ｄ[>]的な演出もできるよ！[p]
	
	[freeimage layer="0" time="1000"]
	
	
;-----------------------------------------------------------
*Part4
;-----------------------------------------------------------
	
		みんなもカメラ演出、使ってみてねっ!![p]
	
	[glink target="*Part5" text="さっそく使う" y="320" color="pink" size="24" x="220" width="440"]
	[s]
	
	
	
;-----------------------------------------------------------
*Part5
;-----------------------------------------------------------
	
	
	[layopt visible="false" layer="message0"]
		
			; ★IE, Edge用。カメラの準備運動をしてやらないと一部挙動がおかしくなる、、、。
			[camera time="0" x="0"]
	
	; [camera]
	; あかねの胸に大きくズーム・イン。
	; この時点で、完全に顔は見えなくなります。
	[camera time="1600" zoom="3" x="10" y="-80"]
	[wait   time="1000"]
	
	; [chara_mod]
	; 顔が映っていない間に、表情チェンジ。
	[chara_mod name="akane" face="doki" time="0"]
	
	; [camera]
	; カメラを下からぐいっとパンします。
	[camera time="1600" y="80"]
	[wait   time="1000"]
	
	; [reset_camera]
	; 400ミリ秒と比較的急にカメラを戻すことで勢いをつけます。
	[reset_camera time="400" wait="false"   ]
	
	[layopt visible="true" layer="message0"]
	
		どっ、どこを見てるのよっ!!![p]
	
	; [camera]
	; カメラタグには from_x, from_y, from_rotate 属性があり、
	; カメラ演出開始時のx, y, rotateを指定できます。
	; (指定しなければ、現在のカメラ位置が基準になります。)
	; これを指定することで、不連続なカメラ演出ができますね。
	[camera wait="false" y="80" zoom="1.5" from_y="-100" from_zoom="1.5" ease_type="cubic-bezier(0.075, 0.82, 0.165, 1)"]
	
		このおバカッ![l]
	
	[camera wait="false" y="80" zoom="2.2" from_y="-160" from_zoom="2.2" ease_type="cubic-bezier(0.075, 0.82, 0.165, 1)"]
	
		_　すけべっ!!![l]
	
	[camera wait="false" x="10" y="100" zoom="3" rotate="0" from_y="80" from_zoom="5" from_rotate="270"]
	
		_　ヘンタイッ!!!!![p]
	
	[reset_camera wait="false"]
	#akane:default
	
		……こんなふうに、[<y]不連続[>]なカメラ演出もできるんだ～。[p]
		すごいでしょー。[p]
	
	#akane:angry
		ここからは使用上の注意なんだけど……カメラは演出が終わったら必ずもとにもどしてね。[p]
		そのための［reset_camera］ってタグがあるから[r]……。[p]
	#akane:doki
		［camera］で指定していたのと同じlayer属性を持つ［reset_camera］を使うこと！[p]
	#akane:default
		いいかな？[p]
	#akane:happy
		いいよね！[p]
	
	#akane:default
		あ、そうそう。忘れるところだったけど、カメラ演出を組むにあたって、[p]
	
		ティラノスクリプトでゲームを開発してる人は、[<y]ティラノライダー[>]を使うと比較的楽だよ。[p]
		ティラノライダーには、ゲームプレビュー時に[r]タグを即時実行できる機能があって……。[p]
		カメラタグを即時実行すれば、結果がすぐに確認できるからね。[p]
		ただしこのとき、ゲームが進行しちゃうから、[r]ゲームが［s］で止まってるときがいいかな。[p]
	
		また、ティラノビルダーでゲームを開発してる人は……。[p]
		ＰＲＯ版ならカメラコンポーネントがあって、[r][<y]カメラプレビュー機能[>]が使えるよ。[p]
	#akane:happy
		マウス操作だけで結果が確認できる!!　う～……これは便利だっ!![p]
	
		カメラ機能の説明は以上ですっ![p]
	
	[jump storage="select.ks"]