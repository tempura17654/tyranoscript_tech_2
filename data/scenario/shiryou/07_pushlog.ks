
; == 07_pushlog.ks =========================================

; プッシュログ・ノーログの解説を行います。

; ==========================================================
	
	
	
	; [set_default_view]
	; これは独自マクロです(→macro.ks)。
	; 解説画面を作成します。
	[set_default_view]
	
	
	
;-----------------------------------------------------------
*Part1
;-----------------------------------------------------------
	
	#akane
		バックログ関連のテスト[p]
		
	; [nolog]～[endnolog]
	; ここはバックログに追加しない
	[nolog]
	
	#akane
		ここはバックログに追加されない[p]
	
	[endnolog]
	
	#akane
		ここはバックログに追加される[p]
	
	
	
;-----------------------------------------------------------
*Part2
;-----------------------------------------------------------
	
	#akane
		この文章の後にプッシュログ
	
	; [pushlog]
	; 文字をバックログに挿入します。
	[pushlog text="〈↑プッシュ!!〉"]
	[p]
	
	
	
;-----------------------------------------------------------
*Part3
;-----------------------------------------------------------
		
	#akane
		この文章と連結してプッシュログ
	
	; [pushlog]
	; join="true"を指定することで、直前のテキストに連結させて
	; 追加することができます。
	[pushlog text="〈←プッシュ!!〉" join="true"]
	[p]
	
	
	
;-----------------------------------------------------------
*Part4
;-----------------------------------------------------------
	
	#akane
		空白を含まないHTMLタグが使用可能
	
	[pushlog text="<br><b><u>改行タグや太字タグなど</u>を使ってみる</b><br>"]
	[p]
	
	
	
;-----------------------------------------------------------
*Part5
;-----------------------------------------------------------
	
	#akane
		※ただし、［iscript］で変数を介せば、自由にHTMLタグを使用可能
	
	[iscript]
		tf.t = '<img src="data/fgimage/logo.png" />'
	[endscript]
	[pushlog text="& tf.t"]
	[p]
		
		; ※ 補足 ※
		; なぜこのようなことになってるのかというと、
		; ティラノスクリプトの仕様では、
		; タグの属性値内に指定した値に含まれる空白記号は、
		; ゲーム実働時にはすべてカットして読み込むことになっているため。
		; たとえば、
		;
		;     @pushlog text="<img src="data/fgimage/logo.png" />"
		;
		; とスクリプトで記述しても、
		; 実際にゲームが動くとき、ティラノスクリプトエンジンは
		;
		;     @pushlog text="<imgsrc="data/fgimage/logo.png"/>"
		;
		; と読み替えてしまう。これでは正常には動かない。
		; しかし[iscript]内の記述に対してはその機構が働かないため、
		; 好きに空白を入れることができる。
		
	
	
;-----------------------------------------------------------
*Part6
;-----------------------------------------------------------
	
	#akane
		選択肢の後にプッシュログしてみるテスト
	
	[glink target="*Part6.1" text="「こんにちは」"         y="110" color="orange" size="24" x="220" width="440"]
	[glink target="*Part6.2" text="「こんばんは」"         y="190" color="blue"   size="24" x="220" width="440"]
	[glink target="*Part6.3" text="「おはようございます」" y="270" color="white"  size="24" x="220" width="440"]
	[s]
	
	;-------------------------------------------------------
	*Part6.1
	;-------------------------------------------------------
		
		[pushlog text="➤「こんにちは」"]
		[jump target="*Part6.4"]
	
	;-------------------------------------------------------
	*Part6.2
	;-------------------------------------------------------
		
		[pushlog text="➤「こんばんは」"]
		[jump target="*Part6.4"]
	
	;-------------------------------------------------------
	*Part6.3
	;-------------------------------------------------------
		
		[pushlog text="➤「おはようございます」"]
		[jump target="*Part6.4"]
	
	;-------------------------------------------------------
	*Part6.4
	;-------------------------------------------------------
		
		[cm]
		#akane
			プッシュログしました。[p]
	
	
	
;-----------------------------------------------------------
*Part2
;-----------------------------------------------------------

	#akane
		以上です[p]
	
	[jump storage="select.ks"]